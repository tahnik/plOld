CREATE SCHEMA `LEAK` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;

CREATE TABLE `PIRACYLEAK`.`USERS` (
  `USERNAME` VARCHAR(32) NOT NULL,
  `PASSWORD` VARCHAR(32) NOT NULL,
  `SALT` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`USERNAME`),
  UNIQUE INDEX `USERNAME_UNIQUE` (`USERNAME` ASC));

CREATE TABLE `PIRACYLEAK`.`TOKEN` (
`USERNAME` VARCHAR(32) NOT NULL,
`TOKEN` VARCHAR(64) NOT NULL,
`CREATED_ON` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
`EXPIRES_ON` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (`USERNAME`),
UNIQUE INDEX `TOKEN_UNIQUE` (`TOKEN` ASC),
CONSTRAINT `TOKEN_USERNAME`
  FOREIGN KEY (`USERNAME`)
  REFERENCES `PIRACYLEAK`.`USER` (`USERNAME`)
  ON DELETE CASCADE
  ON UPDATE NO ACTION);


CREATE TABLE `PIRACYLEAK`.`SECURITY_QUESTION` (
`USERNAME` VARCHAR(32) NOT NULL,
`QUESTION` VARCHAR(100) NOT NULL,
`ANSWER` VARCHAR(100) NOT NULL,
PRIMARY KEY (`USERNAME`),
CONSTRAINT `SQ_USERNAME`
  FOREIGN KEY (`USERNAME`)
  REFERENCES `PIRACYLEAK`.`USER` (`USERNAME`)
  ON DELETE CASCADE
  ON UPDATE NO ACTION);


CREATE TABLE `PIRACYLEAK`.`DISTRICT` (
`DIST_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
`DISTRICT` VARCHAR(50) NOT NULL,
PRIMARY KEY (`DIST_ID`),
UNIQUE INDEX `DIST_ID_UNIQUE` (`DIST_ID` ASC),
UNIQUE INDEX `DISTRICT_UNIQUE` (`DISTRICT` ASC));

CREATE TABLE `PIRACYLEAK`.`LEAK` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `CREATED_ON` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_ON` TIMESTAMP NULL,
  `DESCRIPTION` VARCHAR(1000) NULL,
  `LOCATION` VARCHAR(200) NULL,
  `IMAGE` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC));

  CREATE TABLE `PIRACYLEAK`.`LEAK_TOKEN` (
    `LEAK_ID` INT NOT NULL AUTO_INCREMENT,
    `TOKEN` VARCHAR(64) NOT NULL,
    PRIMARY KEY (`LEAK_ID`),
    UNIQUE INDEX `LEAK_ID_UNIQUE` (`LEAK_ID` ASC),
    CONSTRAINT `LK_TOKEN`
      FOREIGN KEY (`TOKEN`)
      REFERENCES `PIRACYLEAK`.`TOKEN` (`TOKEN`)
      ON DELETE CASCADE
      ON UPDATE NO ACTION,
    CONSTRAINT `LK_ID`
      FOREIGN KEY (`LEAK_ID`)
      REFERENCES `PIRACYLEAK`.`LEAK` (`ID`)
      ON DELETE CASCADE
      ON UPDATE NO ACTION);
